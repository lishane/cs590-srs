input {
  file {
    path => "/home/shane/cs590srs/analysis/sqlToLogstash/result.csv"
    start_position => "beginning"
    sincedb_path => "/home/shane/cs590srs/analysis/logstash/sincedb"
    #sincedb_path => "/dev/null"
  }
}

filter {

    # id, postTypeId, parentId, acceptedAnswerId, creationDate, foundDep, foundRep, postFoundDep, postFoundRep, depMethod,
    # repMethod, acceptedAnswer, score, viewCount, body, lastEditDate, lastActivityDate, title, tags, answerCount
  csv {
    columns => ["id", "postTypeId", "parentId", "acceptedAnswerId", "creationDate", "foundDep", "foundRep", "postFoundDep", "postFoundRep", "depMethod", "repMethod", "acceptedAnswer", "score", "viewCount", "body", "lastEditDate", "lastActivityDate", "title", "stackoverflowTags", "answerCount"]

    # convert => {
    #   "foundDep" => "boolean"
    #   "foundRep" => "boolean"
    #   "postFoundDep" => "boolean"
    #   "postFoundRep" => "boolean"
    #   "score" => "integer"
    #   "viewCount" => "integer"
    # "answerCount" => "integer"
    # }
  }

  mutate {
      convert => { "foundDep" => "boolean" }
      convert => { "foundRep" => "boolean" }
      convert => { "postFoundDep" => "boolean" }
      convert => { "postFoundRep" => "boolean" }
      convert => { "score" => "integer" }
      convert => { "viewCount" => "integer" }
      convert => { "answerCount" => "integer" }
  }

  date {
    match => ["lastEditDate", "yyyy-MM-dd"]
    target => "@lastEditDate"
  }

  date {
    match => ["lastActivityDate", "yyyy-MM-dd"]
    target => "@lastActivityDate"
  }

  date {
    match => ["creationDate", "yyyy-MM-dd"]
  }

  mutate {
    remove_field => ["lastEditDate", "lastActivityDate", "creationDate"]
  }
}

output {
  # stdout {
  #    codec => rubydebug
  # }

  elasticsearch {
    hosts => ["localhost:9200"]
    document_type => "logs"
    index => "logstash-stackoverflow-posts-%{+YYYY.MM}"
  }
}
